CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
                                                       migration_id character varying(150) NOT NULL,
    product_version character varying(32) NOT NULL,
    CONSTRAINT pk___ef_migrations_history PRIMARY KEY (migration_id)
    );

CREATE TABLE "AspNetRoles" (
                               id uuid NOT NULL,
                               name character varying(256),
                               normalized_name character varying(256),
                               concurrency_stamp text,
                               CONSTRAINT pk_asp_net_roles PRIMARY KEY (id)
);

CREATE TABLE "AspNetUsers" (
                               id uuid NOT NULL,
                               first_name text NOT NULL,
                               last_name text NOT NULL,
                               user_name character varying(256),
                               normalized_user_name character varying(256),
                               email character varying(256),
                               normalized_email character varying(256),
                               email_confirmed boolean NOT NULL,
                               password_hash text,
                               security_stamp text,
                               concurrency_stamp text,
                               phone_number text,
                               phone_number_confirmed boolean NOT NULL,
                               two_factor_enabled boolean NOT NULL,
                               lockout_end timestamp with time zone,
                               lockout_enabled boolean NOT NULL,
                               access_failed_count integer NOT NULL,
                               CONSTRAINT pk_asp_net_users PRIMARY KEY (id)
);

CREATE TABLE messages (
                          id uuid NOT NULL,
                          sender uuid NOT NULL,
                          receiver uuid NOT NULL,
                          content character varying(2000) NOT NULL,
                          created_on timestamp with time zone NOT NULL,
                          edited boolean NOT NULL,
                          type integer NOT NULL,
                          CONSTRAINT pk_messages PRIMARY KEY (id)
);

CREATE TABLE "AspNetRoleClaims" (
                                    id integer GENERATED BY DEFAULT AS IDENTITY,
                                    role_id uuid NOT NULL,
                                    claim_type text,
                                    claim_value text,
                                    CONSTRAINT pk_asp_net_role_claims PRIMARY KEY (id),
                                    CONSTRAINT fk_asp_net_role_claims_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES "AspNetRoles" (id) ON DELETE CASCADE
);

CREATE TABLE "AspNetUserClaims" (
                                    id integer GENERATED BY DEFAULT AS IDENTITY,
                                    user_id uuid NOT NULL,
                                    claim_type text,
                                    claim_value text,
                                    CONSTRAINT pk_asp_net_user_claims PRIMARY KEY (id),
                                    CONSTRAINT fk_asp_net_user_claims_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
);

CREATE TABLE "AspNetUserLogins" (
                                    login_provider text NOT NULL,
                                    provider_key text NOT NULL,
                                    provider_display_name text,
                                    user_id uuid NOT NULL,
                                    CONSTRAINT pk_asp_net_user_logins PRIMARY KEY (login_provider, provider_key),
                                    CONSTRAINT fk_asp_net_user_logins_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
);

CREATE TABLE "AspNetUserRoles" (
                                   user_id uuid NOT NULL,
                                   role_id uuid NOT NULL,
                                   CONSTRAINT pk_asp_net_user_roles PRIMARY KEY (user_id, role_id),
                                   CONSTRAINT fk_asp_net_user_roles_asp_net_roles_role_id FOREIGN KEY (role_id) REFERENCES "AspNetRoles" (id) ON DELETE CASCADE,
                                   CONSTRAINT fk_asp_net_user_roles_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
);

CREATE TABLE "AspNetUserTokens" (
                                    user_id uuid NOT NULL,
                                    login_provider text NOT NULL,
                                    name text NOT NULL,
                                    value text,
                                    CONSTRAINT pk_asp_net_user_tokens PRIMARY KEY (user_id, login_provider, name),
                                    CONSTRAINT fk_asp_net_user_tokens_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
);

CREATE TABLE friendships (
                             id uuid NOT NULL,
                             user_id uuid NOT NULL,
                             friend_id uuid NOT NULL,
                             status integer NOT NULL,
                             date_of_friendship timestamp with time zone NOT NULL,
                             created_at timestamp with time zone NOT NULL,
                             CONSTRAINT pk_friendships PRIMARY KEY (id),
                             CONSTRAINT fk_friendships_asp_net_users_friend_id FOREIGN KEY (friend_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE,
                             CONSTRAINT fk_friendships_asp_net_users_user_id FOREIGN KEY (user_id) REFERENCES "AspNetUsers" (id) ON DELETE CASCADE
);

CREATE INDEX ix_asp_net_role_claims_role_id ON "AspNetRoleClaims" (role_id);

CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" (normalized_name);

CREATE INDEX ix_asp_net_user_claims_user_id ON "AspNetUserClaims" (user_id);

CREATE INDEX ix_asp_net_user_logins_user_id ON "AspNetUserLogins" (user_id);

CREATE INDEX ix_asp_net_user_roles_role_id ON "AspNetUserRoles" (role_id);

CREATE INDEX "EmailIndex" ON "AspNetUsers" (normalized_email);

CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" (normalized_user_name);

CREATE INDEX ix_friendships_friend_id ON friendships (friend_id);

CREATE INDEX ix_friendships_user_id ON friendships (user_id);
