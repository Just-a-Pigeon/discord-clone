@*
<div class="container">
    <div class="row p-1">
        <div class="col-1">User</div>
        <div class="col-5">
            <p type="text" id="sender">@User.Identity.Name</p>
        </div>
    </div>
    <div class="row p-1">
        <div class="col-1">Message</div>
        <div class="col-5">
            <input type="text" class="w-100" id="messageInput"/>
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6 text-end">
            <input type="button" id="sendButton" value="Send Message"/>
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <hr/>
        </div>
    </div>
    <div class="row p-1">
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>


<script>

"use strict";

var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();

//Disable the send button until connection is established.
document.getElementById("sendButton").disabled = true;

connection.on("ReceiveMessage", function (user, message, timeStamp) {
    var li = document.createElement("li");
    document.getElementById("messagesList").appendChild(li);
    // We can assign user-supplied strings to an element's textContent because it
    // is not interpreted as markup. If you're assigning in any other way, you
    // should be aware of possible script injection concerns.
    li.textContent = `${user} : ${message} : ${timeStamp}`;
});

connection.start().then(function () {
    document.getElementById("sendButton").disabled = false;
}).catch(function (err) {
    return console.error(err.toString());
});

document.getElementById("sendButton").addEventListener("click", function (event) {
    var sender = document.getElementById("sender").innerText;
    var message = document.getElementById("messageInput").value;

    connection.invoke("SendMessage", sender, message).catch(function (err) {
        return console.error(err.toString());
    });


    event.preventDefault();
});
</script>

*@
<div class="container">
    <div class="row p-1">
        <div class="col-1">Room1</div>
        <div class="col-5">
            <a class="btn btn-primary" asp-route-id="room1" asp-controller="Chat" asp-action="chat">Join</a>
        </div>
    </div>
    <div class="row p-1">
        <div class="col-1">Room2</div>
        <div class="col-5">
            <a class="btn btn-primary" id="Room2" asp-route-id="room2" asp-controller="Chat" asp-action="Chat">Join</a>
        </div>
    </div>    
    <div class="row p-1">
        <div class="col-1">Room3</div>
        <div class="col-5">
            <a class="btn btn-primary" id="Room3" asp-route-id="room3" asp-controller="Chat" asp-action="Chat">Join</a>
        </div>
    </div>
</div>

@*
<script>
    let roomName = "Room1"
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chat")
        .build();
    
    connection.start()
        .then(() => {
            console.log('Connected to the SignalR hub');
        })
        .catch((err) => {
            console.error(`Error connecting to the SignalR hub: ${err}`);
        });
</script>
*@